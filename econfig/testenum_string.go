// Code generated by "stringer -type=TestEnum"; DO NOT EDIT.

package econfig

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TestValue1-0]
	_ = x[TestValue2-1]
	_ = x[TestEnumN-2]
}

const _TestEnum_name = "TestValue1TestValue2TestEnumN"

var _TestEnum_index = [...]uint8{0, 10, 20, 29}

func (i TestEnum) String() string {
	if i < 0 || i >= TestEnum(len(_TestEnum_index)-1) {
		return "TestEnum(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TestEnum_name[_TestEnum_index[i]:_TestEnum_index[i+1]]
}

func (i *TestEnum) FromString(s string) error {
	for j := 0; j < len(_TestEnum_index)-1; j++ {
		if s == _TestEnum_name[_TestEnum_index[j]:_TestEnum_index[j+1]] {
			*i = TestEnum(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: TestEnum")
}
