// Code generated by "goki generate ./..."; DO NOT EDIT.

package econfig

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:      "github.com/emer/emergent/v2/econfig.TestEnum",
	ShortName: "econfig.TestEnum",
	IDName:    "test-enum",
	Doc:       "TestEnum is an enum type for testing",
	Directives: gti.Directives{
		&gti.Directive{Tool: "go", Directive: "generate", Args: []string{"goki", "generate"}},
		&gti.Directive{Tool: "enums", Directive: "enum", Args: []string{}},
	},

	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/econfig.Includeser",
	ShortName:  "econfig.Includeser",
	IDName:     "includeser",
	Doc:        "Includeser enables processing of Includes []string field with files to include in Config objects.",
	Directives: gti.Directives{},

	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/econfig.Includer",
	ShortName:  "econfig.Includer",
	IDName:     "includer",
	Doc:        "Includer enables processing of Include string field with file to include in Config objects.",
	Directives: gti.Directives{},

	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
