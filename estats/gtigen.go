// Code generated by "goki generate ./..."; DO NOT EDIT.

package estats

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/estats.Stats",
	ShortName:  "estats.Stats",
	IDName:     "stats",
	Doc:        "Stats provides maps for storing statistics as named scalar and tensor values.\nThese stats are available in the elog.Context for use during logging.",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Floats", &gti.Field{Name: "Floats", Type: "map[string]float64", LocalType: "map[string]float64", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Strings", &gti.Field{Name: "Strings", Type: "map[string]string", LocalType: "map[string]string", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Ints", &gti.Field{Name: "Ints", Type: "map[string]int", LocalType: "map[string]int", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"F32Tensors", &gti.Field{Name: "F32Tensors", Type: "map[string]*goki.dev/etable/v2/etensor.Float32", LocalType: "map[string]*etensor.Float32", Doc: "float32 tensors used for grabbing values from layers", Directives: gti.Directives{}, Tag: ""}},
		{"F64Tensors", &gti.Field{Name: "F64Tensors", Type: "map[string]*goki.dev/etable/v2/etensor.Float64", LocalType: "map[string]*etensor.Float64", Doc: "float64 tensors as needed for other computations", Directives: gti.Directives{}, Tag: ""}},
		{"IntTensors", &gti.Field{Name: "IntTensors", Type: "map[string]*goki.dev/etable/v2/etensor.Int", LocalType: "map[string]*etensor.Int", Doc: "int tensors as needed for other computations", Directives: gti.Directives{}, Tag: ""}},
		{"Confusion", &gti.Field{Name: "Confusion", Type: "github.com/emer/emergent/v2/confusion.Matrix", LocalType: "confusion.Matrix", Doc: "confusion matrix", Directives: gti.Directives{}, Tag: "view:\"no-inline\""}},
		{"SimMats", &gti.Field{Name: "SimMats", Type: "map[string]*goki.dev/etable/v2/simat.SimMat", LocalType: "map[string]*simat.SimMat", Doc: "similarity matrix for comparing pattern similarities", Directives: gti.Directives{}, Tag: ""}},
		{"Plots", &gti.Field{Name: "Plots", Type: "map[string]*goki.dev/etable/v2/eplot.Plot2D", LocalType: "map[string]*eplot.Plot2D", Doc: "analysis plots -- created by analysis routines", Directives: gti.Directives{}, Tag: ""}},
		{"PCA", &gti.Field{Name: "PCA", Type: "goki.dev/etable/v2/pca.PCA", LocalType: "pca.PCA", Doc: "one PCA object can be reused for all PCA computations", Directives: gti.Directives{}, Tag: ""}},
		{"SVD", &gti.Field{Name: "SVD", Type: "goki.dev/etable/v2/pca.SVD", LocalType: "pca.SVD", Doc: "one SVD object can be reused for all SVD computations", Directives: gti.Directives{}, Tag: ""}},
		{"ActRFs", &gti.Field{Name: "ActRFs", Type: "github.com/emer/emergent/v2/actrf.RFs", LocalType: "actrf.RFs", Doc: "activation-based receptive fields", Directives: gti.Directives{}, Tag: "view:\"no-inline\""}},
		{"Rasters", &gti.Field{Name: "Rasters", Type: "[]string", LocalType: "[]string", Doc: "list of layer names configured for recording raster plots", Directives: gti.Directives{}, Tag: ""}},
		{"LinDecoders", &gti.Field{Name: "LinDecoders", Type: "map[string]*github.com/emer/emergent/v2/decoder.Linear", LocalType: "map[string]*decoder.Linear", Doc: "linear decoders", Directives: gti.Directives{}, Tag: ""}},
		{"SoftMaxDecoders", &gti.Field{Name: "SoftMaxDecoders", Type: "map[string]*github.com/emer/emergent/v2/decoder.SoftMax", LocalType: "map[string]*decoder.SoftMax", Doc: "softmax decoders", Directives: gti.Directives{}, Tag: ""}},
		{"Timers", &gti.Field{Name: "Timers", Type: "map[string]*github.com/emer/emergent/v2/timer.Time", LocalType: "map[string]*timer.Time", Doc: "named timers available for timing how long different computations take (wall-clock time)", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
