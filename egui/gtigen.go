// Code generated by "goki generate ./... -add-types"; DO NOT EDIT.

package egui

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/egui.GUI",
	ShortName:  "egui.GUI",
	IDName:     "gui",
	Doc:        "GUI manages all standard elements of a simulation Graphical User Interface",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"CycleUpdateInterval", &gti.Field{Name: "CycleUpdateInterval", Type: "int", LocalType: "int", Doc: "how many cycles between updates of cycle-level plots", Directives: gti.Directives{}, Tag: ""}},
		{"Active", &gti.Field{Name: "Active", Type: "bool", LocalType: "bool", Doc: "true if the GUI is configured and running", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"IsRunning", &gti.Field{Name: "IsRunning", Type: "bool", LocalType: "bool", Doc: "true if sim is running", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"StopNow", &gti.Field{Name: "StopNow", Type: "bool", LocalType: "bool", Doc: "flag to stop running", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"Plots", &gti.Field{Name: "Plots", Type: "map[github.com/emer/emergent/v2/etime.ScopeKey]*goki.dev/etable/v2/eplot.Plot2D", LocalType: "map[etime.ScopeKey]*eplot.Plot2D", Doc: "plots by scope", Directives: gti.Directives{}, Tag: ""}},
		{"TableViews", &gti.Field{Name: "TableViews", Type: "map[github.com/emer/emergent/v2/etime.ScopeKey]*goki.dev/etable/v2/etview.TableView", LocalType: "map[etime.ScopeKey]*etview.TableView", Doc: "plots by scope", Directives: gti.Directives{}, Tag: ""}},
		{"Grids", &gti.Field{Name: "Grids", Type: "map[string]*goki.dev/etable/v2/etview.TensorGrid", LocalType: "map[string]*etview.TensorGrid", Doc: "tensor grid views by name -- used e.g., for Rasters or ActRFs -- use Grid(name) to access", Directives: gti.Directives{}, Tag: ""}},
		{"ViewUpdt", &gti.Field{Name: "ViewUpdt", Type: "*github.com/emer/emergent/v2/netview.ViewUpdt", LocalType: "*netview.ViewUpdt", Doc: "the view update for managing updates of netview", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"NetData", &gti.Field{Name: "NetData", Type: "*github.com/emer/emergent/v2/netview.NetData", LocalType: "*netview.NetData", Doc: "net data for recording in nogui mode, if !nil", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"StructView", &gti.Field{Name: "StructView", Type: "*goki.dev/gi/v2/giv.StructView", LocalType: "*giv.StructView", Doc: "displays Sim fields on left", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"Tabs", &gti.Field{Name: "Tabs", Type: "*goki.dev/gi/v2/gi.Tabs", LocalType: "*gi.Tabs", Doc: "tabs for different view elements: plots, rasters", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"Body", &gti.Field{Name: "Body", Type: "*goki.dev/gi/v2/gi.Body", LocalType: "*gi.Body", Doc: "Body is the content of the sim window", Directives: gti.Directives{}, Tag: "view:\"-\""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/egui.ToolbarItem",
	ShortName:  "egui.ToolbarItem",
	IDName:     "toolbar-item",
	Doc:        "ToolbarItem holds the configuration values for a toolbar item",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Label", &gti.Field{Name: "Label", Type: "string", LocalType: "string", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Icon", &gti.Field{Name: "Icon", Type: "goki.dev/icons.Icon", LocalType: "icons.Icon", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Tooltip", &gti.Field{Name: "Tooltip", Type: "string", LocalType: "string", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Active", &gti.Field{Name: "Active", Type: "github.com/emer/emergent/v2/egui.ToolGhosting", LocalType: "ToolGhosting", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Func", &gti.Field{Name: "Func", Type: "func()", LocalType: "func()", Doc: "", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:      "github.com/emer/emergent/v2/egui.ToolGhosting",
	ShortName: "egui.ToolGhosting",
	IDName:    "tool-ghosting",
	Doc:       "ToolGhosting the mode enum",
	Directives: gti.Directives{
		&gti.Directive{Tool: "go", Directive: "generate", Args: []string{"goki", "generate"}},
		&gti.Directive{Tool: "enums", Directive: "enum", Args: []string{}},
	},

	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
