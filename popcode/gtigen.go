// Code generated by "goki generate -add-types"; DO NOT EDIT.

package popcode

import (
	"goki.dev/gti"
)

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/emergent/v2/popcode.PopCodes", IDName: "pop-codes"})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/emergent/v2/popcode.OneD", IDName: "one-d", Doc: "popcode.OneD provides encoding and decoding of population\ncodes, used to represent a single continuous (scalar) value\nacross a population of units / neurons (1 dimensional)", Fields: []gti.Field{{Name: "Code", Doc: "how to encode the value"}, {Name: "Min", Doc: "minimum value representable -- for GaussBump, typically include extra to allow mean with activity on either side to represent the lowest value you want to encode"}, {Name: "Max", Doc: "maximum value representable -- for GaussBump, typically include extra to allow mean with activity on either side to represent the lowest value you want to encode"}, {Name: "Sigma", Doc: "sigma parameter of a gaussian specifying the tuning width of the coarse-coded units, in normalized 0-1 range"}, {Name: "Clip", Doc: "ensure that encoded and decoded value remains within specified range"}, {Name: "Thr", Doc: "for decoding, threshold to cut off small activation contributions to overall average value (i.e., if unit's activation is below this threshold, it doesn't contribute to weighted average computation)"}, {Name: "MinSum", Doc: "minimum total activity of all the units representing a value: when computing weighted average value, this is used as a minimum for the sum that you divide by"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/emergent/v2/popcode.navg", IDName: "navg", Fields: []gti.Field{{Name: "avg"}, {Name: "idx"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/emergent/v2/popcode.TwoD", IDName: "two-d", Doc: "popcode.TwoD provides encoding and decoding of population\ncodes, used to represent two continuous (scalar) values\nacross a 2D tensor, using row-major XY encoding:\nY = outer, first dim, X = inner, second dim", Fields: []gti.Field{{Name: "Code", Doc: "how to encode the value"}, {Name: "Min", Doc: "minimum value representable on each dim -- for GaussBump, typically include extra to allow mean with activity on either side to represent the lowest value you want to encode"}, {Name: "Max", Doc: "maximum value representable on each dim -- for GaussBump, typically include extra to allow mean with activity on either side to represent the lowest value you want to encode"}, {Name: "Sigma", Doc: "sigma parameters of a gaussian specifying the tuning width of the coarse-coded units, in normalized 0-1 range"}, {Name: "Clip", Doc: "ensure that encoded and decoded value remains within specified range -- generally not useful with wrap"}, {Name: "WrapX", Doc: "x axis wraps around (e.g., for periodic values such as angle) -- encodes and decodes relative to both the min and max values"}, {Name: "WrapY", Doc: "y axis wraps around (e.g., for periodic values such as angle) -- encodes and decodes relative to both the min and max values"}, {Name: "Thr", Doc: "threshold to cut off small activation contributions to overall average value (i.e., if unit's activation is below this threshold, it doesn't contribute to weighted average computation)"}, {Name: "MinSum", Doc: "minimum total activity of all the units representing a value: when computing weighted average value, this is used as a minimum for the sum that you divide by"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/emergent/v2/popcode.navg", IDName: "navg", Fields: []gti.Field{{Name: "avg"}, {Name: "x"}, {Name: "y"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/emergent/v2/popcode.Ring", IDName: "ring", Doc: "Ring is a OneD popcode that encodes a circular value such as an angle\nthat wraps around at the ends.  It uses two internal vectors\nto render the wrapped-around values into, and then adds them into\nthe final result.  Unlike regular PopCodes, the Min and Max should\nrepresent the exact range of the value (e.g., 0 to 360 for angle)\nwith no extra on the ends, as that extra will wrap around to\nthe other side in this case.", Embeds: []gti.Field{{Name: "OneD"}}, Fields: []gti.Field{{Name: "LowVec", Doc: "low-end encoding vector"}, {Name: "HighVec", Doc: "high-end encoding vector"}}})
