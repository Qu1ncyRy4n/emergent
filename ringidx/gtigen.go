// Code generated by "core generate -add-types"; DO NOT EDIT.

package ringidx

import (
	"cogentcore.org/core/gti"
)

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/emergent/v2/ringidx.FIx", IDName: "f-ix", Doc: "FIx is a fixed-length ring index structure -- does not grow\nor shrink dynamically.", Directives: []gti.Directive{{Tool: "gosl", Directive: "start", Args: []string{"ringidx"}}}, Fields: []gti.Field{{Name: "Zi", Doc: "the zero index position -- where logical 0 is in physical buffer"}, {Name: "Len", Doc: "the length of the buffer -- wraps around at this modulus"}, {Name: "pad"}, {Name: "pad1"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/emergent/v2/ringidx.Idx", IDName: "idx", Doc: "Idx is the ring index structure, maintaining starting index and length\ninto a ring-buffer with maximum length Max.  Max must be > 0 and Len <= Max.\nWhen adding new items would overflow Max, starting index is shifted over\nto overwrite the oldest items with the new ones.  No moving is ever\nrequired -- just a fixed-length buffer of size Max.", Directives: []gti.Directive{{Tool: "go", Directive: "generate", Args: []string{"goki", "generate", "-add-types"}}}, Fields: []gti.Field{{Name: "StIdx", Doc: "the starting index where current data starts -- the oldest data is at this index, and continues for Len items, wrapping around at Max, coming back up at most to StIdx-1"}, {Name: "Len", Doc: "the number of items stored starting at StIdx.  Capped at Max"}, {Name: "Max", Doc: "the maximum number of items that can be stored in this ring"}}})
