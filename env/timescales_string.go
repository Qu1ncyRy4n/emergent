// Code generated by "stringer -type=TimeScales"; DO NOT EDIT.

package env

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Event-9]
	_ = x[Trial-10]
	_ = x[Tick-11]
	_ = x[Sequence-12]
	_ = x[Block-14]
	_ = x[Condition-13]
	_ = x[Epoch-15]
	_ = x[Run-16]
	_ = x[Expt-17]
	_ = x[Scene-18]
	_ = x[Episode-19]
	_ = x[TimeScalesN-20]
}

const _TimeScales_name = "EventTrialTickSequenceConditionBlockEpochRunExptSceneEpisodeTimeScalesN"

var _TimeScales_index = [...]uint8{0, 5, 10, 14, 22, 31, 36, 41, 44, 48, 53, 60, 71}

func (i TimeScales) String() string {
	i -= 9
	if i < 0 || i >= TimeScales(len(_TimeScales_index)-1) {
		return "TimeScales(" + strconv.FormatInt(int64(i+9), 10) + ")"
	}
	return _TimeScales_name[_TimeScales_index[i]:_TimeScales_index[i+1]]
}

func StringToTimeScales(s string) (TimeScales, error) {
	for i := 0; i < len(_TimeScales_index)-1; i++ {
		if s == _TimeScales_name[_TimeScales_index[i]:_TimeScales_index[i+1]] {
			return TimeScales(i + 9), nil
		}
	}
	return 0, errors.New("String: " + s + " is not a valid option for type: TimeScales")
}
