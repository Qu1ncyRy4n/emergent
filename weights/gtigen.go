// Code generated by "goki generate ./... -add-types"; DO NOT EDIT.

package weights

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:      "github.com/emer/emergent/v2/weights.Network",
	ShortName: "weights.Network",
	IDName:    "network",
	Doc:       "Network is temp structure for holding decoded weights",
	Directives: gti.Directives{
		&gti.Directive{Tool: "go", Directive: "generate", Args: []string{"goki", "generate", "-add-types"}},
	},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Network", &gti.Field{Name: "Network", Type: "string", LocalType: "string", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"MetaData", &gti.Field{Name: "MetaData", Type: "map[string]string", LocalType: "map[string]string", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Layers", &gti.Field{Name: "Layers", Type: "[]github.com/emer/emergent/v2/weights.Layer", LocalType: "[]Layer", Doc: "", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/weights.Layer",
	ShortName:  "weights.Layer",
	IDName:     "layer",
	Doc:        "Layer is temp structure for holding decoded weights, one for each layer",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Layer", &gti.Field{Name: "Layer", Type: "string", LocalType: "string", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"MetaData", &gti.Field{Name: "MetaData", Type: "map[string]string", LocalType: "map[string]string", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Units", &gti.Field{Name: "Units", Type: "map[string][]float32", LocalType: "map[string][]float32", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Prjns", &gti.Field{Name: "Prjns", Type: "[]github.com/emer/emergent/v2/weights.Prjn", LocalType: "[]Prjn", Doc: "", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/weights.Prjn",
	ShortName:  "weights.Prjn",
	IDName:     "prjn",
	Doc:        "Prjn is temp structure for holding decoded weights, one for each projection",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"From", &gti.Field{Name: "From", Type: "string", LocalType: "string", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"MetaData", &gti.Field{Name: "MetaData", Type: "map[string]string", LocalType: "map[string]string", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"MetaVals", &gti.Field{Name: "MetaVals", Type: "map[string][]float32", LocalType: "map[string][]float32", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Rs", &gti.Field{Name: "Rs", Type: "[]github.com/emer/emergent/v2/weights.Recv", LocalType: "[]Recv", Doc: "", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/weights.Recv",
	ShortName:  "weights.Recv",
	IDName:     "recv",
	Doc:        "Recv is temp structure for holding decoded weights, one for each recv unit",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Ri", &gti.Field{Name: "Ri", Type: "int", LocalType: "int", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"N", &gti.Field{Name: "N", Type: "int", LocalType: "int", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Si", &gti.Field{Name: "Si", Type: "[]int", LocalType: "[]int", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Wt", &gti.Field{Name: "Wt", Type: "[]float32", LocalType: "[]float32", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Wt1", &gti.Field{Name: "Wt1", Type: "[]float32", LocalType: "[]float32", Doc: "", Directives: gti.Directives{}, Tag: ""}},
		{"Wt2", &gti.Field{Name: "Wt2", Type: "[]float32", LocalType: "[]float32", Doc: "", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
