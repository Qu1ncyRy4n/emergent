// Code generated by "core generate -add-types"; DO NOT EDIT.

package weights

import (
	"cogentcore.org/core/types"
)

var _ = types.AddType(&types.Type{Name: "github.com/emer/emergent/v2/weights.Network", IDName: "network", Doc: "Network is temp structure for holding decoded weights", Directives: []types.Directive{{Tool: "go", Directive: "generate", Args: []string{"core", "generate", "-add-types"}}}, Fields: []types.Field{{Name: "Network"}, {Name: "MetaData"}, {Name: "Layers"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/emergent/v2/weights.Layer", IDName: "layer", Doc: "Layer is temp structure for holding decoded weights, one for each layer", Fields: []types.Field{{Name: "Layer"}, {Name: "MetaData"}, {Name: "Units"}, {Name: "Paths"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/emergent/v2/weights.Path", IDName: "path", Doc: "Path is temp structure for holding decoded weights, one for each pathway", Fields: []types.Field{{Name: "From"}, {Name: "MetaData"}, {Name: "MetaValues"}, {Name: "Rs"}}})

var _ = types.AddType(&types.Type{Name: "github.com/emer/emergent/v2/weights.Recv", IDName: "recv", Doc: "Recv is temp structure for holding decoded weights, one for each recv unit", Fields: []types.Field{{Name: "Ri"}, {Name: "N"}, {Name: "Si"}, {Name: "Wt"}, {Name: "Wt1"}, {Name: "Wt2"}}})
