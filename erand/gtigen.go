// Code generated by "goki generate ./... -add-types"; DO NOT EDIT.

package erand

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/erand.Rand",
	ShortName:  "erand.Rand",
	IDName:     "rand",
	Doc:        "Rand provides an interface with most of the standard\nrand.Rand methods, to support the use of either the\nglobal rand generator or a separate Rand source.\nAll methods take an optional thr argument for the\nthread number in the parallel threaded case.\nThe gosl.slrand generator for example supports this.\nIf not used set to 0 or -1",
	Directives: gti.Directives{},

	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/erand.SysRand",
	ShortName:  "erand.SysRand",
	IDName:     "sys-rand",
	Doc:        "SysRand supports the system random number generator\nfor either a separate rand.Rand source, or, if that\nis nil, the global rand stream.",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Rand", &gti.Field{Name: "Rand", Type: "*math/rand.Rand", LocalType: "*rand.Rand", Doc: "if non-nil, use this random number source instead of the global default one", Directives: gti.Directives{}, Tag: "view:\"-\""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:      "github.com/emer/emergent/v2/erand.RndParams",
	ShortName: "erand.RndParams",
	IDName:    "rnd-params",
	Doc:       "RndParams provides parameterized random number generation according to different distributions\nand variance, mean params",
	Directives: gti.Directives{
		&gti.Directive{Tool: "go", Directive: "generate", Args: []string{"goki", "generate"}},
		&gti.Directive{Tool: "git", Directive: "add", Args: []string{}},
	},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Dist", &gti.Field{Name: "Dist", Type: "github.com/emer/emergent/v2/erand.RndDists", LocalType: "RndDists", Doc: "distribution to generate random numbers from", Directives: gti.Directives{}, Tag: ""}},
		{"Mean", &gti.Field{Name: "Mean", Type: "float64", LocalType: "float64", Doc: "mean of random distribution -- typically added to generated random variants", Directives: gti.Directives{}, Tag: ""}},
		{"Var", &gti.Field{Name: "Var", Type: "float64", LocalType: "float64", Doc: "variability parameter for the random numbers (gauss = standard deviation, not variance; uniform = half-range, others as noted in RndDists)", Directives: gti.Directives{}, Tag: ""}},
		{"Par", &gti.Field{Name: "Par", Type: "float64", LocalType: "float64", Doc: "extra parameter for distribution (depends on each one)", Directives: gti.Directives{}, Tag: "view:\"if Dist=Gamma,Binomial,Beta\""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:      "github.com/emer/emergent/v2/erand.RndDists",
	ShortName: "erand.RndDists",
	IDName:    "rnd-dists",
	Doc:       "RndDists are different random number distributions",
	Directives: gti.Directives{
		&gti.Directive{Tool: "enums", Directive: "enum", Args: []string{}},
	},

	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/emergent/v2/erand.Seeds",
	ShortName:  "erand.Seeds",
	IDName:     "seeds",
	Doc:        "Seeds is a set of random seeds, typically used one per Run",
	Directives: gti.Directives{},

	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
